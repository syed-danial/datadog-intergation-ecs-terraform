name: Terraform Operations

on:
  workflow_call:
    inputs:
      tfvars-path:
        description: 'Path to the tfvars file'
        required: true
        type: string
      tf-apply:
        description: 'Boolean to run apply'
        required: true
        type: boolean
      tf-workspace:
        description: 'Terraform workspace to use'
        required: true
        type: string
      role-to-assume:
         description: "AWS IAM Role ARN for the infra worker role"
         required: true
         type: string
      run-semantic-release:
        description: "Boolean to run semantic release"
        required: true
        type: boolean
      only-plan:
        description: "Boolean to run only terraform plan"
        required: false
        type: boolean
        default: false
    secrets:
      token:
        required: true

jobs:
  RunSemanticRelease:
    if: ${{ inputs.run-semantic-release }}
    uses: ./.github/workflows/semantic-release.yaml
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
  TerraformPlanOrApply:
    if: ${{ needs.RunSemanticRelease.outputs.next_version_tag != '' }}
    runs-on: ubuntu-latest
    needs: RunSemanticRelease
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: v${{ needs.RunSemanticRelease.outputs.next_version_tag }}
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: infraworkersession
          aws-region: us-west-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4
      - name: Terraform Init
        run: terraform init
      - id: select_workspace
        run: terraform workspace select -or-create ${{ inputs.tf-workspace }}
      - id: plan
        run: terraform plan -no-color -var-file ${{ inputs.tfvars-path }} -out=tfplan
      - name: Archive tfplan output
        if: ${{ inputs.tf-apply }}
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
      - name: Terraform Apply
        if: ${{ inputs.tf-apply }}
        run: terraform apply -no-color -auto-approve tfplan
  OnlyTerraformPlan:
    if: ${{ inputs.only-plan }}
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: infraworkersession
          aws-region: us-west-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4
      - name: Terraform Init
        run: terraform init
      - id: select_workspace
        run: terraform workspace select -or-create ${{ inputs.tf-workspace }}
      - id: plan
        run: terraform plan -no-color -var-file ${{ inputs.tfvars-path }} -out=tfplan
      - name: Archive tfplan output
        if: ${{ inputs.tf-apply }}
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
      - name: Terraform Apply
        if: ${{ inputs.tf-apply }}
        run: terraform apply -no-color -auto-approve tfplan
